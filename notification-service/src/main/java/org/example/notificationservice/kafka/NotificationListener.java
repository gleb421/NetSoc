package org.example.notificationservice.kafka;

import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.RequiredArgsConstructor;

import org.example.notificationservice.dto.ChatMessageDto;
import org.example.notificationservice.event.NewMessageEvent;
import org.example.notificationservice.event.UserCreatedEvent;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

import static org.example.notificationservice.kafka.KafkaTopics.NEW_MESSAGE;

@Component
@RequiredArgsConstructor
public class NotificationListener {

    private final ObjectMapper objectMapper;

    @KafkaListener(topics = "chat-messages", groupId = "notification-group")
    public void handleChatMessage(String messageJson) {
        try {
            ChatMessageDto message = objectMapper.readValue(messageJson, ChatMessageDto.class);
            System.out.printf("üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç %d –∫ %d: %s%n",
                    message.getSenderId(), message.getReceiverId(), message.getContent());
            // –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å: notificationService.sendPush(), sendWebSocket(), etc.
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ chat-messages: " + e.getMessage());
        }
    }

    @KafkaListener(topics = "user-registered", groupId = "notification-group")
    public void handleUserRegistration(String messageJson) {
        try {
            UserCreatedEvent user = objectMapper.readValue(messageJson, UserCreatedEvent.class);
            System.out.printf("üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s (ID: %d)%n", user.getUsername(), user.getUserId());
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user-registered: " + e.getMessage());
        }
    }

    @KafkaListener(topics = NEW_MESSAGE, groupId = "notification-group")
    public void handleNewMessage(String json) {
        try {
            NewMessageEvent event = objectMapper.readValue(json, NewMessageEvent.class);
            System.out.printf("üîî –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è %d –æ—Ç %s: %s%n",
                    event.getReceiverId(), event.getSenderUsername(), event.getContent());
        } catch (Exception e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ NewMessageEvent: " + e.getMessage());
        }
    }



}
